{"ts":1357489662152,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1357489668553,"patch":[[{"diffs":[[1,"///////////////////////////////////////////////////////////////////////////////\n// @file         : account.js                                                //\n// @summary      : account controller                                        //\n// @version      : 0.1                                                       //\n// @project      : Node.JS + Express boilerplate for cloud9 and appFog       //\n// @description  :                                                           //\n// @author       : Benjamin Maggi                                            //\n// @email        : benjaminmaggi@gmail.com                                   //\n// @date         : 12 Dec 2012                                               //\n// ------------------------------------------------------------------------- //\n//                                                                           //\n// @copyright Copyright 2012 Benjamin Maggi, all rights reserved.            //\n//                                                                           //\n//                                                                           //\n// License:                                                                  //\n// This program is free software; you can redistribute it                    //\n// and/or modify it under the terms of the GNU General Public                //\n// License as published by the Free Software Foundation;                     //\n// either version 2 of the License, or (at your option) any                  //\n// later version.                                                            //\n//                                                                           //\n// This program is distributed in the hope that it will be useful,           //\n// but WITHOUT ANY WARRANTY; without even the implied warranty of            //\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //\n// GNU General Public License for more details.                              //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n\n// Controllers\nvar mongoose = require('mongoose');\n\n// Load model\nvar account_schema = require('../models/account')\n  , Account = mongoose.model('Account', account_schema);\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get specific Account by its _id                                  //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccountById/:id                                      //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccountById = function (request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findById(request.params.id, gotAccount);\n    \n    function gotAccount(error, account) {\n        if (error) {\n            return next(error);\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccount = function (request, response, next) {\n{\n    response.contentType('application/json');\n    if(request.isAuthenticated()) {\n            return response.send(JSON.stringify(request.user));\n    }\n    var message = JSON.stringify({error: 'youre not logged in'})\n    return response.send(message);\n};\n\n/* */\n"]],"start1":0,"start2":0,"length1":0,"length2":4957}]],"length":4957,"saved":false}
{"ts":1357489670981,"patch":[[{"diffs":[[0,"\n};\n"],[-1,"\n/* */\n"]],"start1":4946,"start2":4946,"length1":11,"length2":4}]],"length":4950,"saved":false}
{"ts":1357489672341,"patch":[[{"diffs":[[0,"essage);\n};\n"],[1,"\n/* *"]],"start1":4938,"start2":4938,"length1":12,"length2":17}]],"length":4955,"saved":false}
{"ts":1357489674272,"patch":[[{"diffs":[[-1,"///////////////////////////////////////////////////////////////////////////////\n// @file         : account.js                                                //\n// @summary      : account controller                                        //\n// @version      : 0.1                                                       //\n// @project      : Node.JS + Express boilerplate for cloud9 and appFog       //\n// @description  :                                                           //\n// @author       : Benjamin Maggi                                            //\n// @email        : benjaminmaggi@gmail.com                                   //\n// @date         : 12 Dec 2012                                               //\n// ------------------------------------------------------------------------- //\n//                                                                           //\n// @copyright Copyright 2012 Benjamin Maggi, all rights reserved.            //\n//                                                                           //\n//                                                                           //\n// License:                                                                  //\n// This program is free software; you can redistribute it                    //\n// and/or modify it under the terms of the GNU General Public                //\n// License as published by the Free Software Foundation;                     //\n// either version 2 of the License, or (at your option) any                  //\n// later version.                                                            //\n//                                                                           //\n// This program is distributed in the hope that it will be useful,           //\n// but WITHOUT ANY WARRANTY; without even the implied warranty of            //\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //\n// GNU General Public License for more details.                              //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n\n// Controllers\nvar mongoose = require('mongoose');\n\n// Load model\nvar account_schema = require('../models/account')\n  , Account = mongoose.model('Account', account_schema);\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get specific Account by its _id                                  //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccountById/:id                                      //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccountById = function (request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findById(request.params.id, gotAccount);\n    \n    function gotAccount(error, account) {\n        if (error) {\n            return next(error);\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccount = function (request, response, next) {\n{\n    response.contentType('application/json');\n    if(request.isAuthenticated()) {\n            return response.send(JSON.stringify(request.user));\n    }\n    var message = JSON.stringify({error: 'youre not logged in'})\n    return response.send(message);\n};\n\n/* *"]],"start1":0,"start2":0,"length1":4955,"length2":0}]],"length":0,"saved":false}
{"ts":1357489686936,"patch":[[{"diffs":[[1,"///////////////////////////////////////////////////////////////////////////////\n// @file         : account.js                                                //\n// @summary      : account controller                                        //\n// @version      : 0.1                                                       //\n// @project      : Node.JS + Express boilerplate for cloud9 and appFog       //\n// @description  :                                                           //\n// @author       : Benjamin Maggi                                            //\n// @email        : benjaminmaggi@gmail.com                                   //\n// @date         : 12 Dec 2012                                               //\n// ------------------------------------------------------------------------- //\n//                                                                           //\n// @copyright Copyright 2012 Benjamin Maggi, all rights reserved.            //\n//                                                                           //\n//                                                                           //\n// License:                                                                  //\n// This program is free software; you can redistribute it                    //\n// and/or modify it under the terms of the GNU General Public                //\n// License as published by the Free Software Foundation;                     //\n// either version 2 of the License, or (at your option) any                  //\n// later version.                                                            //\n//                                                                           //\n// This program is distributed in the hope that it will be useful,           //\n// but WITHOUT ANY WARRANTY; without even the implied warranty of            //\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //\n// GNU General Public License for more details.                              //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n\n// Controllers\nvar mongoose = require('mongoose');\n\n// Load model\nvar account_schema = require('../models/account')\n  , Account = mongoose.model('Account', account_schema);\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get specific Account by its _id                                  //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccountById/:id                                      //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccountById = function (request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findById(request.params.id, gotAccount);\n    \n    function gotAccount(error, account) {\n        if (error) {\n            return next(error);\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccount = function (request, response, next) {\n{\n    response.contentType('application/json');\n    if(request.isAuthenticated()) {\n            return response.send(JSON.stringify(request.user));\n    }\n    var message = JSON.stringify({error: 'youre not logged in'})\n    return response.send(message);\n};"]],"start1":0,"start2":0,"length1":0,"length2":4949}]],"length":4949,"saved":false}
{"ts":1357489719372,"patch":[[{"diffs":[[-1,"///////////////////////////////////////////////////////////////////////////////\n// @file         : account.js                                                //\n// @summary      : account controller                                        //\n// @version      : 0.1                                                       //\n// @project      : Node.JS + Express boilerplate for cloud9 and appFog       //\n// @description  :                                                           //\n// @author       : Benjamin Maggi                                            //\n// @email        : benjaminmaggi@gmail.com                                   //\n// @date         : 12 Dec 2012                                               //\n// ------------------------------------------------------------------------- //\n//                                                                           //\n// @copyright Copyright 2012 Benjamin Maggi, all rights reserved.            //\n//                                                                           //\n//                                                                           //\n// License:                                                                  //\n// This program is free software; you can redistribute it                    //\n// and/or modify it under the terms of the GNU General Public                //\n// License as published by the Free Software Foundation;                     //\n// either version 2 of the License, or (at your option) any                  //\n// later version.                                                            //\n//                                                                           //\n// This program is distributed in the hope that it will be useful,           //\n// but WITHOUT ANY WARRANTY; without even the implied warranty of            //\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //\n// GNU General Public License for more details.                              //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n\n// Controllers\nvar mongoose = require('mongoose');\n\n// Load model\nvar account_schema = require('../models/account')\n  , Account = mongoose.model('Account', account_schema);\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get specific Account by its _id                                  //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccountById/:id                                      //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccountById = function (request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findById(request.params.id, gotAccount);\n    \n    function gotAccount(error, account) {\n        if (error) {\n            return next(error);\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccount = function (request, response, next) {\n{\n    response.contentType('application/json');\n    if(request.isAuthenticated()) {\n            return response.send(JSON.stringify(request.user));\n    }\n    var message = JSON.stringify({error: 'youre not logged in'})\n    return response.send(message);\n};"]],"start1":0,"start2":0,"length1":4949,"length2":0}]],"length":0,"saved":false}
{"ts":1357489728545,"patch":[[{"diffs":[[1,"///////////////////////////////////////////////////////////////////////////////\n// @file         : account.js                                                //\n// @summary      : account controller                                        //\n// @version      : 0.1                                                       //\n// @project      : Node.JS + Express boilerplate for cloud9 and appFog       //\n// @description  :                                                           //\n// @author       : Benjamin Maggi                                            //\n// @email        : benjaminmaggi@gmail.com                                   //\n// @date         : 12 Dec 2012                                               //\n// ------------------------------------------------------------------------- //\n//                                                                           //\n// @copyright Copyright 2012 Benjamin Maggi, all rights reserved.            //\n//                                                                           //\n//                                                                           //\n// License:                                                                  //\n// This program is free software; you can redistribute it                    //\n// and/or modify it under the terms of the GNU General Public                //\n// License as published by the Free Software Foundation;                     //\n// either version 2 of the License, or (at your option) any                  //\n// later version.                                                            //\n//                                                                           //\n// This program is distributed in the hope that it will be useful,           //\n// but WITHOUT ANY WARRANTY; without even the implied warranty of            //\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //\n// GNU General Public License for more details.                              //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////"]],"start1":0,"start2":0,"length1":0,"length2":2159}]],"length":2159,"saved":false}
{"ts":1357489742069,"patch":[[{"diffs":[[0,"////////////////////////////"],[1,"\n\n\n// Controllers\nvar mongoose = require('mongoose');\n\n// Load model\nvar account_schema = require('../models/account')\n  , Account = mongoose.model('Account', account_schema);\n\n\n"]],"start1":2131,"start2":2131,"length1":28,"length2":206}]],"length":2337,"saved":false}
{"ts":1357489760555,"patch":[[{"diffs":[[0,"ema);\n\n\n"],[1,"///////////////////////////////////////////////////////////////////////////////\n// Route to get specific Account by its _id                                  //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccountById/:id                                      //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccountById = function (request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findById(request.params.id, gotAccount);\n    \n    function gotAccount(error, account) {\n        if (error) {\n            return next(error);\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n"]],"start1":2329,"start2":2329,"length1":8,"length2":1347}]],"length":3676,"saved":false}
{"ts":1357489813377,"patch":[[{"diffs":[[0,"   }\n};\n"],[1,"\n///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccount = function (request, response, next) {\n{\n    response.contentType('application/json');\n    if(request.isAuthenticated()) {\n            return response.send(JSON.stringify(request.user));\n    }\n    var message = JSON.stringify({error: 'youre not logged in'});\n    return response.send(message);\n};"]],"start1":3668,"start2":3668,"length1":8,"length2":1284}]],"length":4952,"saved":false}
{"ts":1357489827943,"patch":[[{"diffs":[[0,"xt) {\n{\n"],[1,"    /*\n"],[0,"    resp"]],"start1":4689,"start2":4689,"length1":16,"length2":23}]],"length":4959,"saved":false}
{"ts":1357489831866,"patch":[[{"diffs":[[0,"ssage);\n"],[1,"    */\n"],[0,"};"]],"start1":4949,"start2":4949,"length1":10,"length2":17}]],"length":4966,"saved":false}
{"ts":1357489847529,"patch":[[{"diffs":[[0,"{\n{\n"],[-1,"    /*\n"],[0,"    "]],"start1":4693,"start2":4693,"length1":15,"length2":8}]],"length":4959,"saved":false}
{"ts":1357489850300,"patch":[[{"diffs":[[0,"///////////////\n"],[1,"    /*\n"],[0,"exports.getAccou"]],"start1":4621,"start2":4621,"length1":32,"length2":39}]],"length":4966,"saved":false}
{"ts":1357489852725,"patch":[[{"diffs":[[0,"///////\n"],[-1,"    "],[0,"/*\nexpor"]],"start1":4629,"start2":4629,"length1":20,"length2":16}]],"length":4962,"saved":false}
{"ts":1357489855186,"patch":[[{"diffs":[[0,"e);\n"],[-1,"    */\n"],[0,"};"]],"start1":4949,"start2":4949,"length1":13,"length2":6}]],"length":4955,"saved":false}
{"ts":1357489856134,"patch":[[{"diffs":[[0,"age);\n};"],[1,"\n    */"]],"start1":4947,"start2":4947,"length1":8,"length2":15}]],"length":4962,"saved":false}
{"ts":1357489858393,"patch":[[{"diffs":[[0,"ge);\n};\n"],[-1,"    "],[0,"*/"]],"start1":4948,"start2":4948,"length1":14,"length2":10}]],"length":4958,"saved":false}
{"ts":1357489871316,"patch":[[{"diffs":[[0,"///////\n"],[1,"exports.getAccountById = function (request, response, next) {\n    \n"],[0,"/*\nexpor"]],"start1":4629,"start2":4629,"length1":16,"length2":83}]],"length":5025,"saved":false}
{"ts":1357489872120,"patch":[[{"diffs":[[0,"next) {\n"],[-1,"    "],[1,"}"],[0,"\n/*\nexpo"]],"start1":4691,"start2":4691,"length1":20,"length2":17}]],"length":5022,"saved":false}
{"ts":1357489876143,"patch":[[{"diffs":[[0,"ext) {\n}"],[1,";"],[0,"\n/*\nexpo"]],"start1":4692,"start2":4692,"length1":16,"length2":17}]],"length":5023,"saved":false}
{"ts":1357489880000,"patch":[[{"diffs":[[0,"tById = function"],[-1," "],[0,"(request, respon"]],"start1":4654,"start2":4654,"length1":33,"length2":32}]],"length":5022,"saved":false}
{"ts":1357489882799,"patch":[[{"diffs":[[0,"ports.getAccount"],[-1,"ById"],[0," = function(requ"]],"start1":4639,"start2":4639,"length1":36,"length2":32}]],"length":5018,"saved":false}
{"ts":1357489898786,"patch":[[{"diffs":[[0,"next) {\n"],[1,"    response.contentType('application/json');\n"],[0,"};\n/*\nex"]],"start1":4686,"start2":4686,"length1":16,"length2":62}]],"length":5064,"saved":false}
{"ts":1357489901703,"patch":[[{"diffs":[[0,"tById = function"],[-1," "],[0,"(request, respon"]],"start1":3314,"start2":3314,"length1":33,"length2":32}]],"length":5063,"saved":false}
{"ts":1357489916515,"patch":[[{"diffs":[[0,"json');\n"],[1,"    var message = JSON.stringify({error: 'youre not logged in'});\n    return response.send(message);\n"],[0,"};\n/*\nex"]],"start1":4731,"start2":4731,"length1":16,"length2":117}]],"length":5164,"saved":false}
{"ts":1357489923352,"patch":[[{"diffs":[[0,"JSON.stringify({"],[1,"'"],[0,"error: 'youre no"]],"start1":4757,"start2":4757,"length1":32,"length2":33}]],"length":5165,"saved":false}
{"ts":1357489925412,"patch":[[{"diffs":[[0,"gify({'error"],[1,"'"],[0,": 'youre not"]],"start1":4767,"start2":4767,"length1":24,"length2":25}]],"length":5166,"saved":false}
{"ts":1357489932481,"patch":[[{"diffs":[[0,"fy({"],[-1,"'"],[0,"error"],[-1,"'"],[0,": 'y"]],"start1":4769,"start2":4769,"length1":15,"length2":13}]],"length":5164,"saved":false}
{"ts":1357489944049,"patch":[[{"diffs":[[0,"ion/json');\n"],[1,"    if(request.isAuthenticated()) {\n    }\n"],[0,"    var mess"]],"start1":4727,"start2":4727,"length1":24,"length2":66}]],"length":5206,"saved":false}
{"ts":1357489965022,"patch":[[{"diffs":[[0,"icated()) {\n"],[1,"        return response.send(\n"],[0,"    }\n    va"]],"start1":4763,"start2":4763,"length1":24,"length2":54}]],"length":5236,"saved":false}
{"ts":1357489972030,"patch":[[{"diffs":[[0,"se.send("],[1,");"],[0,"\n    }\n "]],"start1":4796,"start2":4796,"length1":16,"length2":18}]],"length":5238,"saved":false}
{"ts":1357489977881,"patch":[[{"diffs":[[0,"henticated()) {\n"],[1,"        var message = JSON.stringify({error: 'youre not logged in'});\n"],[0,"        return r"]],"start1":4759,"start2":4759,"length1":32,"length2":102}]],"length":5308,"saved":false}
{"ts":1357489989099,"patch":[[{"diffs":[[0,"ify("],[-1,"{error: 'youre not logged in'}"],[1,"request.user"],[0,");\n "]],"start1":4808,"start2":4808,"length1":38,"length2":20}]],"length":5290,"saved":false}
{"ts":1357490010868,"patch":[[{"diffs":[[0,") {\n        var "],[-1,"message"],[1,"account"],[0," = JSON.stringif"]],"start1":4771,"start2":4771,"length1":39,"length2":39}]],"length":5290,"saved":false}
{"ts":1357490015925,"patch":[[{"diffs":[[0,"se.send("],[1,"account"],[0,");\n    }"]],"start1":4848,"start2":4848,"length1":16,"length2":23}]],"length":5297,"saved":false}
