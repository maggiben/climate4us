{"ts":1357682218910,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"///////////////////////////////////////////////////////////////////////////////\n// @file         : account.js                                                //\n// @summary      : account controller                                        //\n// @version      : 0.1                                                       //\n// @project      : Node.JS + Express boilerplate for cloud9 and appFog       //\n// @description  :                                                           //\n// @author       : Benjamin Maggi                                            //\n// @email        : benjaminmaggi@gmail.com                                   //\n// @date         : 12 Dec 2012                                               //\n// ------------------------------------------------------------------------- //\n//                                                                           //\n// @copyright Copyright 2012 Benjamin Maggi, all rights reserved.            //\n//                                                                           //\n//                                                                           //\n// License:                                                                  //\n// This program is free software; you can redistribute it                    //\n// and/or modify it under the terms of the GNU General Public                //\n// License as published by the Free Software Foundation;                     //\n// either version 2 of the License, or (at your option) any                  //\n// later version.                                                            //\n//                                                                           //\n// This program is distributed in the hope that it will be useful,           //\n// but WITHOUT ANY WARRANTY; without even the implied warranty of            //\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             //\n// GNU General Public License for more details.                              //\n//                                                                           //\n///////////////////////////////////////////////////////////////////////////////\n\n\n// Controllers\nvar mongoose = require('mongoose');\n\n// Load model\nvar account_schema = require('../models/account')\n  , Account = mongoose.model('Account', account_schema);\n\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get specific Account by its _id                                  //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccountById/:id                                      //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccountById = function(request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findById(request.params.id, gotAccount);\n    \n    function gotAccount(error, account) {\n        if (error) {\n            return next(error);\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\nexports.getAccount = function(request, response, next) {\n    response.contentType('application/json');\n    if(request.isAuthenticated()) {\n        var account = JSON.stringify(request.user);\n        return response.send(account);\n    }\n    var message = JSON.stringify({error: 'youre not logged in'});\n    return response.send(message);\n};\n\nexports.createAccount = function(request, response, next) {\n    \n    response.contentType('application/json');\n    var username = request.body.username;\n    console.log(\"registering: user: %s pass: %s\", request.body.username, request.body.password);\n    \n    Account.findOne({username : username }, function(error, existingUser) {\n        if (error || existingUser) {\n            console.log(\"existingUser\");\n            var message = JSON.stringify({error: \"existingUser\", message: 'User already exists'});\n            return response.send(message);\n        }\n        var account = new Account({ username : request.body.username, email: request.body.username});\n        account.setPassword(request.body.password, function(error) {\n            if (error) {\n                return response.render('signup', { account : account });\n            }\n            account.save(function(error) {\n                if (error) {\n                    var message = JSON.stringify({error: \"faultSave\", message: 'Cannot save user'});\n                    return response.send(message);\n                }\n                var message = JSON.stringify(account);\n                return response.send(message);\n            });\n        });\n    });\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Route to update an Account                                                //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON updated account                                     //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url POST /account/update/:id                                             //\n///////////////////////////////////////////////////////////////////////////////\nexports.update = function (request, response, next) {\n    \n    response.contentType('application/json');\n    Account.findByIdAndUpdate({username : request.body.username}, request.body, updateAccount);\n    \n    function updateAccount (error, account) {\n        if (error) {\n            console.log(error);\n            return next(error);\n        }\n        if (!account) {\n            console.log(error);\n            return next(error);\n        } \n        else {\n            console.log(JSON.stringify(account));\n        }\n        var accountJSON = JSON.stringify(account);\n        return response.send(accountJSON);\n    }\n};\n\nexports.setSubscription = function(request, response, next) {\n    \n    response.contentType('application/json');\n    \n    Account.findOne({username : request.user.username }, function(error, account) {\n        if (error) {\n            console.log(error);\n            return next(error);\n        }\n        if (!account) {\n            console.log(error);\n            return next(error);\n        }\n        console.log(\"got Accoun\");\n        account.subscription = request.body.subscription;\n        account.save(onSaved);\n\n        function onSaved(error, station) {\n            if (error) {\n                console.log(error);\n                return next(error);\n            }\n            console.log(\"onSaved\");\n            var accountJSON = JSON.stringify(account);\n            return response.send(accountJSON);\n        }\n    });\n};\n\n"]],"start1":0,"start2":0,"length1":0,"length2":8624}]],"length":8624}
{"contributors":[],"silentsave":true,"ts":1357761145898,"patch":[[{"diffs":[[0,"ngoose')"],[1,"\n    , passport = require('passport')"],[0,";\n\n// Lo"]],"start1":2203,"start2":2203,"length1":16,"length2":53},{"diffs":[[0,"ema);\n\n\n"],[1,"///////////////////////////////////////////////////////////////////////////////\n// Route to signin                                                           //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON Account                                             //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/signin                                                  //\n///////////////////////////////////////////////////////////////////////////////\nexports.signIn = function(request, response, next) {\n    \n    console.log(request.headers)\n    response.contentType('application/json');\n    passport.authenticate('local', function(error, user, info) {\n        if (error) { \n            return next(error); \n        }\n        if (!user) { \n            console.log(\"unauthorized\");\n            var nouserJSON = JSON.stringify({title: 'bad login', locale: 'en_US', message: 'invalid username'});\n            return response.send(nouserJSON);\n        }\n        request.logIn(user, function(error) {\n            if (error) { \n                return next(error);\n            }\n        });\n        console.log(\"auth okay\");\n        var accountJSON = JSON.stringify(request.user);\n        return response.send(accountJSON);\n    })(request, response, next);\n}\n\n"],[0,"////////"]],"start1":2366,"start2":2366,"length1":16,"length2":1778},{"diffs":[[0,"iption;\n"],[1,"        account.subscriptions = [request.body.subscription];\n"],[0,"        "]],"start1":10069,"start2":10069,"length1":16,"length2":77}]],"length":10484,"saved":false}
{"ts":1357761158252,"patch":[[{"diffs":[[0,"oute to "],[1,"Account "],[0,"signin  "]],"start1":2458,"start2":2458,"length1":16,"length2":24}]],"length":10492,"saved":false}
{"ts":1357761162283,"patch":[[{"diffs":[[0,"            "],[-1,"        "],[0,"//\n//       "]],"start1":2519,"start2":2519,"length1":32,"length2":24}]],"length":10484,"saved":false}
{"ts":1357761180306,"patch":[[{"diffs":[[0,"y authenticated "],[-1,"a"],[1,"A"],[0,"ccount          "]],"start1":5579,"start2":5579,"length1":33,"length2":33}]],"length":10484,"saved":false}
{"ts":1357761194345,"patch":[[{"diffs":[[0,"ssage);\n};\n\n"],[1,"\n"],[0,"exports.crea"]],"start1":6764,"start2":6764,"length1":24,"length2":25}]],"length":10485,"saved":false}
{"ts":1357761201875,"patch":[[{"diffs":[[0,"e);\n};\n\n"],[1,"///////////////////////////////////////////////////////////////////////////////\n// Route to get currently authenticated Account                              //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON authenticated account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////"],[0,"\nexports"]],"start1":6768,"start2":6768,"length1":16,"length2":975}]],"length":11444,"saved":false}
{"ts":1357761215117,"patch":[[{"diffs":[[0,"///\n// Route to "],[-1,"get"],[1,"create"],[0," currently authe"]],"start1":6852,"start2":6852,"length1":35,"length2":38}]],"length":11447,"saved":false}
{"ts":1357761220683,"patch":[[{"diffs":[[0," create "],[-1,"currently authenticated"],[1,"a new"],[0," Account"]],"start1":6867,"start2":6867,"length1":39,"length2":21}]],"length":11429,"saved":false}
{"ts":1357761227128,"patch":[[{"diffs":[[0,"                "],[1,"               "],[0,"//\n//           "]],"start1":6902,"start2":6902,"length1":32,"length2":47},{"diffs":[[0,"bject} JSON "],[-1,"authenticated"],[1,"newly "],[0," account    "]],"start1":7269,"start2":7269,"length1":37,"length2":30}]],"length":11437,"saved":false}
{"ts":1357761229785,"patch":[[{"diffs":[[0,"N newly "],[1,"created"],[0," account"]],"start1":7279,"start2":7279,"length1":16,"length2":23}]],"length":11444,"saved":false}
{"ts":1357761301038,"patch":[[{"diffs":[[0,"  }\n};\n\n"],[1,"///////////////////////////////////////////////////////////////////////////////\n// Route to create a new Account                                             //\n//                                                                           //\n// @param {Object} request                                                   //\n// @param {Object} response                                                  //\n// @param {Object} next                                                      //\n// @return {Object} JSON newly created account                               //\n//                                                                           //\n// @api public                                                               //\n//                                                                           //\n// @url GET /account/getAccount                                              //\n///////////////////////////////////////////////////////////////////////////////\n"],[0,"exports."]],"start1":10541,"start2":10541,"length1":16,"length2":976}]],"length":12404,"saved":false}
{"ts":1357761330201,"patch":[[{"diffs":[[0,"rl GET /account/"],[-1,"get"],[1,"create"],[0,"Account         "]],"start1":7581,"start2":7581,"length1":35,"length2":38}]],"length":12407,"saved":false}
{"ts":1357761356466,"patch":[[{"diffs":[[0,"                "],[-1,"   "],[0,"//\n/////////////"]],"start1":7637,"start2":7637,"length1":35,"length2":32}]],"length":12404,"saved":false}
{"ts":1357761378460,"patch":[[{"diffs":[[0,"//////\n\n"],[-1,"\n"],[0,"// Contr"]],"start1":2153,"start2":2153,"length1":17,"length2":16}]],"length":12403,"saved":false}
