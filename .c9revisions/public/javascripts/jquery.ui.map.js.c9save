{"ts":1356032170628,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1," /*!\r\n * jQuery FN Google Map 3.0-rc\r\n * http://code.google.com/p/jquery-ui-map/\r\n * Copyright (c) 2010 - 2012 Johan SÃ¤ll Larsson\r\n * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php\r\n */\r\n( function($) {\r\n\t\r\n\t/**\r\n\t * @param name:string\r\n\t * @param prototype:object\r\n\t */\r\n\t$.a = function(name, prototype) {\r\n\t\t\r\n\t\tvar namespace = name.split('.')[0];\r\n        name = name.split('.')[1];\r\n\t\t\r\n\t\t$[namespace] = $[namespace] || {};\r\n\t\t$[namespace][name] = function(options, element) {\r\n\t\t\tif ( arguments.length ) {\r\n\t\t\t\tthis._setup(options, element);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t$[namespace][name].prototype = $.extend({\r\n\t\t\t'namespace': namespace,\r\n\t\t\t'pluginName': name\r\n        }, prototype);\r\n\t\t\r\n\t\t$.fn[name] = function(options) {\r\n\t\t\t\r\n\t\t\tvar isMethodCall = typeof options === \"string\",\r\n\t\t\t\targs = Array.prototype.slice.call(arguments, 1),\r\n\t\t\t\treturnValue = this;\r\n\t\t\t\r\n\t\t\tif ( isMethodCall && options.substring(0, 1) === '_' ) { \r\n\t\t\t\treturn returnValue; \r\n\t\t\t}\r\n\r\n\t\t\tthis.each(function() {\r\n\t\t\t\tvar instance = $.data(this, name);\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstance = $.data(this, name, new $[namespace][name](options, this));\r\n\t\t\t\t}\r\n\t\t\t\tif (isMethodCall) {\r\n\t\t\t\t\treturnValue = instance[options].apply(instance, args);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\treturn returnValue; \r\n\t\t\t\r\n\t\t};\r\n\t\t\r\n\t};\r\n\t\r\n\t$.a('ui.gmap', {\r\n\t\t\r\n\t\t/**\r\n\t\t * Map options\r\n\t\t * @see http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#MapOptions\r\n\t\t */\r\n\t\toptions: {\r\n\t\t\tmapTypeId: 'roadmap',\r\n\t\t\tzoom: 5\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Get or set options\r\n\t\t * @param key:string\r\n\t\t * @param options:object\r\n\t\t * @return object\r\n\t\t */\r\n\t\toption: function(key, options) {\r\n\t\t\tif (options) {\r\n\t\t\t\tthis.options[key] = options;\r\n\t\t\t\tthis.get('map').set(key, options);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\treturn this.options[key];\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Setup plugin basics, \r\n\t\t * @param options:object\r\n\t\t * @param element:node\r\n\t\t */\r\n\t\t_setup: function(options, element) {\r\n\t\t\tthis.el = element;\r\n\t\t\toptions = options || {};\r\n\t\t\tjQuery.extend(this.options, options, { 'center': this._latLng(options.center) });\r\n\t\t\tthis._create();\r\n\t\t\tif ( this._init ) { this._init(); }\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Instanciate the Google Maps object\r\n\t\t */\r\n\t\t_create: function() {\r\n\t\t\tvar self = this;\r\n\t\t\tthis.instance = { 'map': new google.maps.Map(self.el, self.options), 'markers': [], 'overlays': [], 'services': [] };\r\n\t\t\tgoogle.maps.event.addListenerOnce(self.instance.map, 'bounds_changed', function() { $(self.el).trigger('init', self.instance.map); });\r\n\t\t\tself._call(self.options.callback, self.instance.map);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds a latitude longitude pair to the bounds.\r\n\t\t * @param position:google.maps.LatLng/string\r\n\t\t */\r\n\t\taddBounds: function(position) {\r\n\t\t\tvar bounds = this.get('bounds', new google.maps.LatLngBounds());\r\n\t\t\tbounds.extend(this._latLng(position));\r\n\t\t\tthis.get('map').fitBounds(bounds);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Helper function to check if a LatLng is within the viewport\r\n\t\t * @param marker:google.maps.Marker\r\n\t\t */\r\n\t\tinViewport: function(marker) {\r\n\t\t\tvar bounds = this.get('map').getBounds();\r\n\t\t\treturn (bounds) ? bounds.contains(marker.getPosition()) : false;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds a custom control to the map\r\n\t\t * @param panel:jquery/node/string\t\r\n\t\t * @param position:google.maps.ControlPosition\t \r\n\t\t * @see http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#ControlPosition\r\n\t\t */\r\n\t\taddControl: function(panel, position) {\r\n\t\t\tthis.get('map').controls[position].push(this._unwrap(panel));\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds a Marker to the map\r\n\t\t * @param markerOptions:google.maps.MarkerOptions\r\n\t\t * @param callback:function(map:google.maps.Map, marker:google.maps.Marker) (optional)\r\n\t\t * @return $(google.maps.Marker)\r\n\t\t * @see http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#MarkerOptions\r\n\t\t */\r\n\t\taddMarker: function(markerOptions, callback) {\r\n\t\t\tmarkerOptions.map = this.get('map');\r\n\t\t\tmarkerOptions.position = this._latLng(markerOptions.position);\r\n\t\t\tvar marker = new (markerOptions.marker || google.maps.Marker)(markerOptions);\r\n\t\t\tvar markers = this.get('markers');\r\n\t\t\tif ( marker.id ) {\r\n\t\t\t\tmarkers[marker.id] = marker;\r\n\t\t\t} else {\r\n\t\t\t\tmarkers.push(marker);\r\n\t\t\t}\r\n\t\t\tif ( marker.bounds ) {\r\n\t\t\t\tthis.addBounds(marker.getPosition());\r\n\t\t\t}\r\n\t\t\tthis._call(callback, markerOptions.map, marker);\r\n\t\t\treturn $(marker);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Clears by type\r\n\t\t * @param ctx:string\te.g. 'markers', 'overlays', 'services'\r\n\t\t */\r\n\t\tclear: function(ctx) {\r\n\t\t\tthis._c(this.get(ctx));\r\n\t\t\tthis.set(ctx, []);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t_c: function(obj) {\r\n\t\t\tfor ( var property in obj ) {\r\n\t\t\t\tif ( obj.hasOwnProperty(property) ) {\r\n\t\t\t\t\tif ( obj[property] instanceof google.maps.MVCObject ) {\r\n\t\t\t\t\t\tgoogle.maps.event.clearInstanceListeners(obj[property]);\r\n\t\t\t\t\t\tif ( obj[property].setMap ) {\r\n\t\t\t\t\t\t\tobj[property].setMap(null);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if ( obj[property] instanceof Array ) {\r\n\t\t\t\t\t\tthis._c(obj[property]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tobj[property] = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns the objects with a specific property and value, e.g. 'category', 'tags'\r\n\t\t * @param ctx:string\tin what context, e.g. 'markers' \r\n\t\t * @param options:object\tproperty:string\tthe property to search within, value:string, operator:string (optional) (AND/OR)\r\n\t\t * @param callback:function(marker:google.maps.Marker, isFound:boolean)\r\n\t\t */\r\n\t\tfind: function(ctx, options, callback) {\r\n\t\t\tvar obj = this.get(ctx);\r\n\t\t\toptions.value = $.isArray(options.value) ? options.value : [options.value];\r\n\t\t\tfor ( var property in obj ) {\r\n\t\t\t\tif ( obj.hasOwnProperty(property) ) {\r\n\t\t\t\t\tvar isFound = false;\r\n\t\t\t\t\tfor ( var value in options.value ) {\r\n\t\t\t\t\t\tif ( $.inArray(options.value[value], obj[property][options.property]) > -1 ) {\r\n\t\t\t\t\t\t\tisFound = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif ( options.operator && options.operator === 'AND' ) {\r\n\t\t\t\t\t\t\t\tisFound = false;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcallback(obj[property], isFound);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Returns an instance property by key. Has the ability to set an object if the property does not exist\r\n\t\t * @param key:string\r\n\t\t * @param value:object(optional)\r\n\t\t */\r\n\t\tget: function(key, value) {\r\n\t\t\tvar instance = this.instance;\r\n\t\t\tif ( !instance[key] ) {\r\n\t\t\t\tif ( key.indexOf('>') > -1 ) {\r\n\t\t\t\t\tvar e = key.replace(/ /g, '').split('>');\r\n\t\t\t\t\tfor ( var i = 0; i < e.length; i++ ) {\r\n\t\t\t\t\t\tif ( !instance[e[i]] ) {\r\n\t\t\t\t\t\t\tif (value) {\r\n\t\t\t\t\t\t\t\tinstance[e[i]] = ( (i + 1) < e.length ) ? [] : value;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinstance = instance[e[i]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn instance;\r\n\t\t\t\t} else if ( value && !instance[key] ) {\r\n\t\t\t\t\tthis.set(key, value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn instance[key];\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Triggers an InfoWindow to open\r\n\t\t * @param infoWindowOptions:google.maps.InfoWindowOptions\r\n\t\t * @param marker:google.maps.Marker (optional)\r\n\t\t * @param callback:function (optional)\r\n\t\t * @see http://code.google.com/intl/sv-SE/apis/maps/documentation/javascript/reference.html#InfoWindowOptions\r\n\t\t */\r\n\t\topenInfoWindow: function(infoWindowOptions, marker, callback) {\r\n\t\t\tvar iw = this.get('iw', infoWindowOptions.infoWindow || new google.maps.InfoWindow);\r\n\t\t\tiw.setOptions(infoWindowOptions);\r\n\t\t\tiw.open(this.get('map'), this._unwrap(marker)); \r\n\t\t\tthis._call(callback, iw);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Triggers an InfoWindow to close\r\n\t\t */\r\n\t\tcloseInfoWindow: function() {\r\n\t\t\tif ( this.get('iw') != null ) {\r\n\t\t\t\tthis.get('iw').close();\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\t\t\r\n\t\t/**\r\n\t\t * Sets an instance property\r\n\t\t * @param key:string\r\n\t\t * @param value:object\r\n\t\t */\r\n\t\tset: function(key, value) {\r\n\t\t\tthis.instance[key] = value;\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Refreshes the map\r\n\t\t */\r\n\t\trefresh: function() {\r\n\t\t\tvar map = this.get('map');\r\n\t\t\tvar latLng = map.getCenter();\r\n\t\t\t$(map).triggerEvent('resize');\r\n\t\t\tmap.setCenter(latLng);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Destroys the plugin.\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis.clear('markers').clear('services').clear('overlays')._c(this.instance);\r\n\t\t\tjQuery.removeData(this.el, this.name);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Helper method for calling a function\r\n\t\t * @param callback\r\n\t\t */\r\n\t\t_call: function(callback) {\r\n\t\t\tif ( callback && $.isFunction(callback) ) {\r\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Helper method for google.maps.Latlng\r\n\t\t * @param latLng:string/google.maps.LatLng\r\n\t\t */\r\n\t\t_latLng: function(latLng) {\r\n\t\t\tif ( !latLng ) {\r\n\t\t\t\treturn new google.maps.LatLng(0.0, 0.0);\r\n\t\t\t}\r\n\t\t\tif ( latLng instanceof google.maps.LatLng ) {\r\n\t\t\t\treturn latLng;\r\n\t\t\t} else {\r\n\t\t\t\tlatLng = latLng.replace(/ /g,'').split(',');\r\n\t\t\t\treturn new google.maps.LatLng(latLng[0], latLng[1]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Helper method for unwrapping jQuery/DOM/string elements\r\n\t\t * @param obj:string/node/jQuery\r\n\t\t */\r\n\t\t_unwrap: function(obj) {\r\n\t\t\treturn (!obj) ? null : ( (obj instanceof jQuery) ? obj[0] : ((obj instanceof Object) ? obj : $('#'+obj)[0]) )\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n\tjQuery.fn.extend( {\r\n\t\t\r\n\t\ttriggerEvent: function(eventType) {\r\n\t\t\tgoogle.maps.event.trigger(this[0], eventType);\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\taddEventListener: function(eventType, eventDataOrCallback, eventCallback) {\r\n\t\t\tif ( google.maps && this[0] instanceof google.maps.MVCObject ) {\r\n\t\t\t\tgoogle.maps.event.addListener(this[0], eventType, eventDataOrCallback);\r\n\t\t\t} else {\r\n\t\t\t\tif (eventCallback) {\r\n\t\t\t\t\tthis.bind(eventType, eventDataOrCallback, eventCallback);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.bind(eventType, eventDataOrCallback);\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t  \r\n\t\t/*removeEventListener: function(eventType) {\r\n\t\t\tif ( google.maps && this[0] instanceof google.maps.MVCObject ) {\r\n\t\t\t\tif (eventType) {\r\n\t\t\t\t\tgoogle.maps.event.clearListeners(this[0], eventType);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgoogle.maps.event.clearInstanceListeners(this[0]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.unbind(eventType);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}*/\r\n\t\t\r\n\t});\r\n\t\r\n\tjQuery.each(('click rightclick dblclick mouseover mouseout drag dragend').split(' '), function(i, name) {\r\n\t\tjQuery.fn[name] = function(a, b) {\r\n\t\t\treturn this.addEventListener(name, a, b);\r\n\t\t}\r\n\t});\r\n\t\r\n} (jQuery) );"]],"start1":0,"start2":0,"length1":0,"length2":10406}]],"length":10406}
