{"ts":1355114778443,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1355114781817,"patch":[[{"diffs":[[1,"/*!\n * jQuery.ScrollTo\n * Copyright (c) 2007-2012 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com\n * Dual licensed under MIT and GPL.\n * Date: 4/09/2012\n *\n * @projectDescription Easy element scrolling using jQuery.\n * http://flesler.blogspot.com/2007/10/jqueryscrollto.html\n * @author Ariel Flesler\n * @version 1.4.4\n *\n * @id jQuery.scrollTo\n * @id jQuery.fn.scrollTo\n * @param {String, Number, DOMElement, jQuery, Object} target Where to scroll the matched elements.\n *      The different options for target are:\n *\t\t- A number position (will be applied to all axes).\n *\t\t- A string position ('44', '100px', '+=90', etc ) will be applied to all axes\n *\t\t- A jQuery/DOM element ( logically, child of the element to scroll )\n *\t\t- A string selector, that will be relative to the element to scroll ( 'li:eq(2)', etc )\n *\t\t- A hash { top:x, left:y }, x and y can be any kind of number/string like above.\n *\t\t- A percentage of the container's dimension/s, for example: 50% to go to the middle.\n *\t\t- The string 'max' for go-to-end. \n * @param {Number, Function} duration The OVERALL length of the animation, this argument can be the settings object instead.\n * @param {Object,Function} settings Optional set of settings or the onAfter callback.\n *\t @option {String} axis Which axis must be scrolled, use 'x', 'y', 'xy' or 'yx'.\n *\t @option {Number, Function} duration The OVERALL length of the animation.\n *\t @option {String} easing The easing method for the animation.\n *\t @option {Boolean} margin If true, the margin of the target element will be deducted from the final position.\n *\t @option {Object, Number} offset Add/deduct from the end position. One number for both axes or { top:x, left:y }.\n *\t @option {Object, Number} over Add/deduct the height/width multiplied by 'over', can be { top:x, left:y } when using both axes.\n *\t @option {Boolean} queue If true, and both axis are given, the 2nd axis will only be animated after the first one ends.\n *\t @option {Function} onAfter Function to be called after the scrolling ends. \n *\t @option {Function} onAfterFirst If queuing is activated, this function will be called after the first scrolling ends.\n * @return {jQuery} Returns the same jQuery object, for chaining.\n *\n * @desc Scroll to a fixed position\n * @example $('div').scrollTo( 340 );\n *\n * @desc Scroll relatively to the actual position\n * @example $('div').scrollTo( '+=340px', { axis:'y' } );\n *\n * @desc Scroll using a selector (relative to the scrolled element)\n * @example $('div').scrollTo( 'p.paragraph:eq(2)', 500, { easing:'swing', queue:true, axis:'xy' } );\n *\n * @desc Scroll to a DOM element (same for jQuery object)\n * @example var second_child = document.getElementById('container').firstChild.nextSibling;\n *\t\t\t$('#container').scrollTo( second_child, { duration:500, axis:'x', onAfter:function(){\n *\t\t\t\talert('scrolled!!');\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n *\t\t\t}});\n *\n * @desc Scroll on both axes, to different values\n * @example $('div').scrollTo( { top: 300, left:'+=200' }, { axis:'xy', offset:-20 } );\n */\n\n;(function( $ ){\n\t\n\tvar $scrollTo = $.scrollTo = function( target, duration, settings ){\n\t\t$(window).scrollTo( target, duration, settings );\n\t};\n\n\t$scrollTo.defaults = {\n\t\taxis:'xy',\n\t\tduration: parseFloat($.fn.jquery) >= 1.3 ? 0 : 1,\n\t\tlimit:true\n\t};\n\n\t// Returns the element that needs to be animated to scroll the window.\n\t// Kept for backwards compatibility (specially for localScroll & serialScroll)\n\t$scrollTo.window = function( scope ){\n\t\treturn $(window)._scrollable();\n\t};\n\n\t// Hack, hack, hack :)\n\t// Returns the real elements to scroll (supports window/iframes, documents and regular nodes)\n\t$.fn._scrollable = function(){\n\t\treturn this.map(function(){\n\t\t\tvar elem = this,\n\t\t\t\tisWin = !elem.nodeName || $.inArray( elem.nodeName.toLowerCase(), ['iframe','#document','html','body'] ) != -1;\n\n\t\t\t\tif( !isWin )\n\t\t\t\t\treturn elem;\n\n\t\t\tvar doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;\n\t\t\t\n\t\t\treturn /webkit/i.test(navigator.userAgent) || doc.compatMode == 'BackCompat' ?\n\t\t\t\tdoc.body : \n\t\t\t\tdoc.documentElement;\n\t\t});\n\t};\n\n\t$.fn.scrollTo = function( target, duration, settings ){\n\t\tif( typeof duration == 'object' ){\n\t\t\tsettings = duration;\n\t\t\tduration = 0;\n\t\t}\n\t\tif( typeof settings == 'function' )\n\t\t\tsettings = { onAfter:settings };\n\t\t\t\n\t\tif( target == 'max' )\n\t\t\ttarget = 9e9;\n\t\t\t\n\t\tsettings = $.extend( {}, $scrollTo.defaults, settings );\n\t\t// Speed is still recognized for backwards compatibility\n\t\tduration = duration || settings.duration;\n\t\t// Make sure the settings are given right\n\t\tsettings.queue = settings.queue && settings.axis.length > 1;\n\t\t\n\t\tif( settings.queue )\n\t\t\t// Let's keep the overall duration\n\t\t\tduration /= 2;\n\t\tsettings.offset = both( settings.offset );\n\t\tsettings.over = both( settings.over );\n\n\t\treturn this._scrollable().each(function(){\n\t\t\t// Null target yields nothing, just like jQuery does\n\t\t\tif (target == null) return;\n\n\t\t\tvar elem = this,\n\t\t\t\t$elem = $(elem),\n\t\t\t\ttarg = target, toff, attr = {},\n\t\t\t\twin = $elem.is('html,body');\n\n\t\t\tswitch( typeof targ ){\n\t\t\t\t// A number will pass the regex\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'string':\n\t\t\t\t\tif( /^([+-]=)?\\d+(\\.\\d+)?(px|%)?$/.test(targ) ){\n\t\t\t\t\t\ttarg = both( targ );\n\t\t\t\t\t\t// We are done\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// Relative selector, no break!\n\t\t\t\t\ttarg = $(targ,this);\n\t\t\t\t\tif (!targ.length) return;\n\t\t\t\tcase 'object':\n\t\t\t\t\t// DOMElement / jQuery\n\t\t\t\t\tif( targ.is || targ.style )\n\t\t\t\t\t\t// Get the real position of the target \n\t\t\t\t\t\ttoff = (targ = $(targ)).offset();\n\t\t\t}\n\t\t\t$.each( settings.axis.split(''), function( i, axis ){\n\t\t\t\tvar Pos\t= axis == 'x' ? 'Left' : 'Top',\n\t\t\t\t\tpos = Pos.toLowerCase(),\n\t\t\t\t\tkey = 'scroll' + Pos,\n\t\t\t\t\told = elem[key],\n\t\t\t\t\tmax = $scrollTo.max(elem, axis);\n\n\t\t\t\tif( toff ){// jQuery / DOMElement\n\t\t\t\t\tattr[key] = toff[pos] + ( win ? 0 : old - $elem.offset()[pos] );\n\n\t\t\t\t\t// If it's a dom element, reduce the margin\n\t\t\t\t\tif( settings.margin ){\n\t\t\t\t\t\tattr[key] -= parseInt(targ.css('margin'+Pos)) || 0;\n\t\t\t\t\t\tattr[key] -= parseInt(targ.css('border'+Pos+'Width')) || 0;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tattr[key] += settings.offset[pos] || 0;\n\t\t\t\t\t\n\t\t\t\t\tif( settings.over[pos] )\n\t\t\t\t\t\t// Scroll to a fraction of its width/height\n\t\t\t\t\t\tattr[key] += targ[axis=='x'?'width':'height']() * settings.over[pos];\n\t\t\t\t}else{ \n\t\t\t\t\tvar val = targ[pos];\n\t\t\t\t\t// Handle percentage values\n\t\t\t\t\tattr[key] = val.slice && val.slice(-1) == '%' ? \n\t\t\t\t\t\tparseFloat(val) / 100 * max\n\t\t\t\t\t\t: val;\n\t\t\t\t}\n\n\t\t\t\t// Number or 'number'\n\t\t\t\tif( settings.limit && /^\\d+$/.test(attr[key]) )\n\t\t\t\t\t// Check the limits\n\t\t\t\t\tattr[key] = attr[key] <= 0 ? 0 : Math.min( attr[key], max );\n\n\t\t\t\t// Queueing axes\n\t\t\t\tif( !i && settings.queue ){\n\t\t\t\t\t// Don't waste time animating, if there's no need.\n\t\t\t\t\tif( old != attr[key] )\n\t\t\t\t\t\t// Intermediate animation\n\t\t\t\t\t\tanimate( settings.onAfterFirst );\n\t\t\t\t\t// Don't animate this axis again in the next iteration.\n\t\t\t\t\tdelete attr[key];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tanimate( settings.onAfter );\t\t\t\n\n\t\t\tfunction animate( callback ){\n\t\t\t\t$elem.animate( attr, duration, settings.easing, callback && function(){\n\t\t\t\t\tcallback.call(this, target, settings);\n\t\t\t\t});\n\t\t\t};\n\n\t\t}).end();\n\t};\n\t\n\t// Max scrolling position, works on quirks mode\n\t// It only fails (not too badly) on IE, quirks mode.\n\t$scrollTo.max = function( elem, axis ){\n\t\tvar Dim = axis == 'x' ? 'Width' : 'Height',\n\t\t\tscroll = 'scroll'+Dim;\n\t\t\n\t\tif( !$(elem).is('html,body') )\n\t\t\treturn elem[scroll] - $(elem)[Dim.toLowerCase()]();\n\t\t\n\t\tvar size = 'client' + Dim,\n\t\t\thtml = elem.ownerDocument.documentElement,\n\t\t\tbody = elem.ownerDocument.body;\n\n\t\treturn Math.max( html[scroll], body[scroll] ) \n\t\t\t - Math.min( html[size]  , body[size]   );\n\t};\n\n\tfunction both( val ){\n\t\treturn typeof val == 'object' ? val : { top:val, left:val };\n\t};\n\n})( jQuery );"]],"start1":0,"start2":0,"length1":0,"length2":7791}]],"length":7791,"saved":false}
