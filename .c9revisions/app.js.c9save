{"ts":1355009267634,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n/**\n * Module dependencies.\n */\n\nvar express = require('express'), \n    routes = require('./routes'),\n    conf = require('./config'),\n    cons = require('consolidate');\n//var mongo = require('mongoskin');\n\n//console.log(cons);\n\nvar app = express();\n\n// ## CORS middleware\n// see: http://stackoverflow.com/questions/7067966/how-to-allow-cors-in-express-nodejs\nvar allowCrossDomain = function(req, res, next) {\n    res.header('Access-Control-Allow-Origin', '*');\n    res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n    res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n\n    // intercept OPTIONS method\n    if ('OPTIONS' == req.method) {\n      res.send(200);\n    }\n    else {\n      next();\n    }\n};\n\n// Configuration\napp.configure(function(){\n    app.engine('html', cons.mustache);\n    app.set('view engine', 'html');\n    app.set('views', __dirname + '/views');\n    app.use(express.bodyParser());\n    app.use(express.methodOverride());\n    app.use(allowCrossDomain);\n    app.use(express.cookieParser());\n    app.use(express.session({ secret: conf.sessionSecret }));\n    app.use(require('stylus').middleware({ src: __dirname + '/public' }));\n    app.use(app.router);\n    app.use(express.static(__dirname + '/public'));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.errorHandler());\n});\n\n// Routes\napp.all('/', function(req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With\");\n    next();\n});\n \n\napp.get('/', function(request, response) {\n    response.sendfile(__dirname + '/public/index.html');\n})\napp.get('/app', routes.index);\n\napp.post('/station', function(request, response){\n  console.log(request.body);      // your JSON\n  response.send(request.body);    // echo the result back\n});\n\napp.get('/setup', function(request, response) {\n    response.contentType('application/json');\n    \n    /*\n    var conn_db = mongo.db('admin:12345@alex.mongohq.com:10062/cloud-db');\n    var collection = conn_db.collection('ladies');\n    collection.insert({name: 'Hollywood Rose', members: ['Axl Rose', 'Izzy Stradlin', 'Chris Weber'], year: 1984}); \n    */\n    var user = {\n        \"user\":\n        {\n        \tname: \"MrX\",\n            last_name: null,\n    \t\tfirst_name: null,\n            email: \"benjaminmaggi@gmail.com\",\n            id: \"50bc04d3613f5d6105000002\",\n    \t\turls:\n    \t\t\t{\n    \t\t\t\t\"self\":\"https://secure.gaug.es/me\",\n    \t\t\t\t\"gauges\":\"https://secure.gaug.es/gauges\",\n    \t\t\t\t\"clients\":\"https://secure.gaug.es/clients\"\n    \t\t\t},\n    \t}\n    };\n    // Since the request is for a JSON representation of the people, we\n    //  should JSON serialize them. The built-in JSON.stringify() function\n    //  does that.\n    var userJSON = JSON.stringify(user);\n\n    // Now, we can use the response object's send method to push that string\n    //  of people JSON back to the browser in response to this request:\n    response.send(userJSON);\n});\n\napp.get('/start', function(request, response) {\n    // We want to set the content-type header so that the browser understands\n    //  the content of the response.\n    response.contentType('application/json');\n\n    // Normally, the would probably come from a database, but we can cheat:\n    var last_7_days = [\n    { views_size: '05px', people_size: '25px' },\n    { views_size: '10px', people_size: '20px' },\n    { views_size: '15px', people_size: '15px' },\n    { views_size: '20px', people_size: '10px' },\n    { views_size: '25px', people_size: '05px' },\n    { views_size: '20px', people_size: '00px' },\n    { views_size: '10px', people_size: '10px' },\n    ];\n    \n  // Since the request is for a JSON representation of the people, we\n  //  should JSON serialize them. The built-in JSON.stringify() function\n  //  does that.\n  var last_7_daysJSON = JSON.stringify(last_7_days);\n\n  // Now, we can use the response object's send method to push that string\n  //  of people JSON back to the browser in response to this request:\n  response.send(last_7_daysJSON);\n});\n\napp.get('/subscription', function(request, response) {\n    // We want to set the content-type header so that the browser understands\n    //  the content of the response.\n    response.contentType('application/json');\n\n    var user = {\n    \"user\":\n        {\n    \t\tname: \"MrX\",\n            last_name:null,\n    \t\tfirst_name:null,\n            email: \"benjaminmaggi@gmail.com\",\n            id: \"50bc04d3613f5d6105000002\",\n    \t\turls:\n    \t\t\t{\n    \t\t\t\t\"self\":\"https://secure.gaug.es/me\",\n    \t\t\t\t\"gauges\":\"https://secure.gaug.es/gauges\",\n    \t\t\t\t\"clients\":\"https://secure.gaug.es/clients\"\n    \t\t\t},\n    \t}\n    };\n    // Since the request is for a JSON representation of the people, we\n    //  should JSON serialize them. The built-in JSON.stringify() function\n    //  does that.\n    var userJSON = JSON.stringify(user);\n\n    // Now, we can use the response object's send method to push that string\n    //  of people JSON back to the browser in response to this request:\n    response.send(userJSON);\n});\napp.listen(conf.listenPort, function(){\n  console.log(\"Express server listening on port %d in %s mode\", process.env.PORT, app.settings.env);\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":5300}]],"length":5300}
{"contributors":[],"silentsave":true,"ts":1355009904521,"patch":[[{"diffs":[[0,");\n    \n"],[1,"    \n    \n    \n    \n    \n    \n"],[0,"    /*\n "]],"start1":2042,"start2":2042,"length1":16,"length2":46}]],"length":5330,"saved":false}
{"ts":1355009956222,"patch":[[{"diffs":[[0,"');\n"],[-1,"    \n    \n    \n    \n    \n    \n    \n"],[0,"    "]],"start1":2041,"start2":2041,"length1":43,"length2":8}]],"length":5295,"saved":false}
